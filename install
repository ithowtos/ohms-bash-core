#!/bin/bash
# Version - 1.0.0 - rc

/usr/local/bin/getpath

os=`cat /etc/*release | egrep -io "centos|ubuntu|alpine" | tolowercase`
echo $os
#exit 0
if [ -z "$1" ];then
	prog=`echo $BASENAME $0`
	usage ${prog} '[package(s) to install or upgrade to upgrade whole bot]' "$1" 
	usage ${prog} 'search' "[packages to search]" 
	exit 0
elif [ "ubuntu" = "$os" ] && [ "update" = "$1" ]; then
	osudo apt update -y
elif [ "ubuntu" = "$os" ] && [ "upgrade" = "$1" ]; then
	osudo apt update -y && osudo apt upgrade -y && osudo apt dist-upgrade -y
elif [ "alpine" = "$os" ] && [ "upgrade" = "$1" ]; then
	apk update && apk upgrade
elif [ "ubuntu" = "$os" ] && [ "-f" = "$1" ]; then
	echo install -f
	osudo apt install -f 
elif [ "ubuntu" = "$os" ] && [ "remove" = "$1" ]; then
	echo removing "${@:2}"
	osudo apt remove "${@:2}" 
elif [ "ubuntu" = "$os" ] && [ "autoremove" = "$1" ]; then
	echo autoremoving excess stuff
	osudo apt autoremove $2
elif [ "centos" = "$os" ] && [ "upgrade" = "$1" ]; then
	osudo yum update -y && osudo yum upgrade -y && osudo yum dist-upgrade -y
elif [ "ubuntu" = "$os" ] && [ "search" = "$1" ]; then
	#osudo apt-get update -y && osudo apt-get upgrade -y && osudo apt-get dist-upgrade -y
	apt-cache search "${@:2}"
elif [ "centos" = "$os" ] && [ "search" = "$1" ]; then
	#osudo yum update -y && osudo yum upgrade -y && osudo yum dist-upgrade -y
	yum search "$2-"
elif [ "ubuntu" = "$os" ] && [[ `echo $1 | grep "deb" | egrep "(http|ftp)"` ]]; then
	echo deb link package
	#exit 0
	TEMP_DEB="$(mktemp)" &&
	wget -O "$TEMP_DEB" "$1" &&
	osudo dpkg -i "$TEMP_DEB" 
	rm -f "$TEMP_DEB"
elif [ "ubuntu" = "$os" ] && [[ `echo $1 | grep "deb"` ]]; then
	echo deb package
	#exit 0
	osudo dpkg -i "$1"
elif [ "ubuntu" = "$os" ] && [[ $1 =~ ^ppa* ]] ; then
	echo ubuntu repo sources add
	#exit 0
	osudo add-apt-repository "$@"
elif [ "ubuntu" = "$os" ]; then
	echo ubuntu repo install
	#exit 0
	osudo apt install "$@"
elif [ "alpine" = "$os" ]; then
	apk add `echo "$@" | sed 's/-y//g'`
elif [ "centos" = "$os" ];then
	osudo yum install "$@"
else
	echo Unknown OS - $os
fi
